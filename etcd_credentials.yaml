#update hosts and names if necesary
- hosts: etcd 
  remote_user: ubuntu

  tasks:
  - name: 
    shell: |
      # Update HOST0, HOST1 and HOST2 with the IPs of your hosts
      export HOST0=192.168.0.2
      export HOST1=192.168.0.3
      export HOST2=192.168.0.4
        
      # Update NAME0, NAME1 and NAME2 with the hostnames of your hosts
      export NAME0="vps-4263b60e"
      export NAME1="vps-b152d57f"
      export NAME2="vps-a1922212"
      
      # Create temp directories to store files that will end up on other hosts.
      mkdir -p /tmp/${HOST0}/ /tmp/${HOST1}/ /tmp/${HOST2}/
      
      HOSTS=(${HOST0} ${HOST1} ${HOST2})
      NAMES=(${NAME0} ${NAME1} ${NAME2})
      
      for i in "${!HOSTS[@]}"; do
      HOST=${HOSTS[$i]}
      NAME=${NAMES[$i]}
      cat << EOF > /tmp/${HOST}/kubeadmcfg.yaml
      ---
      apiVersion: "kubeadm.k8s.io/v1beta3"
      kind: InitConfiguration
      nodeRegistration:
          name: ${NAME}
      localAPIEndpoint:
          advertiseAddress: ${HOST}
      ---
      apiVersion: "kubeadm.k8s.io/v1beta3"
      kind: ClusterConfiguration
      etcd:
          local:
              serverCertSANs:
              - "${HOST}"
              peerCertSANs:
              - "${HOST}"
              extraArgs:
                  initial-cluster: ${NAMES[0]}=https://${HOSTS[0]}:2380,${NAMES[1]}=https://${HOSTS[1]}:2380,${NAMES[2]}=https://${HOSTS[2]}:2380
                  initial-cluster-state: new
                  name: ${NAME}
                  listen-peer-urls: https://${HOST}:2380
                  listen-client-urls: https://${HOST}:2379
                  advertise-client-urls: https://${HOST}:2379
                  initial-advertise-peer-urls: https://${HOST}:2380
      EOF
      done
      kubeadm init phase certs etcd-ca
      kubeadm init phase certs etcd-server --config=/tmp/${HOST2}/kubeadmcfg.yaml
      kubeadm init phase certs etcd-peer --config=/tmp/${HOST2}/kubeadmcfg.yaml
      kubeadm init phase certs etcd-healthcheck-client --config=/tmp/${HOST2}/kubeadmcfg.yaml
      kubeadm init phase certs apiserver-etcd-client --config=/tmp/${HOST2}/kubeadmcfg.yaml
      cp -R /etc/kubernetes/pki /tmp/${HOST2}/
      # cleanup non-reusable certificates
      find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
      
      kubeadm init phase certs etcd-server --config=/tmp/${HOST1}/kubeadmcfg.yaml
      kubeadm init phase certs etcd-peer --config=/tmp/${HOST1}/kubeadmcfg.yaml
      kubeadm init phase certs etcd-healthcheck-client --config=/tmp/${HOST1}/kubeadmcfg.yaml
      kubeadm init phase certs apiserver-etcd-client --config=/tmp/${HOST1}/kubeadmcfg.yaml
      cp -R /etc/kubernetes/pki /tmp/${HOST1}/
      find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
      
      kubeadm init phase certs etcd-server --config=/tmp/${HOST0}/kubeadmcfg.yaml
      kubeadm init phase certs etcd-peer --config=/tmp/${HOST0}/kubeadmcfg.yaml
      kubeadm init phase certs etcd-healthcheck-client --config=/tmp/${HOST0}/kubeadmcfg.yaml
      kubeadm init phase certs apiserver-etcd-client --config=/tmp/${HOST0}/kubeadmcfg.yaml
      # No need to move the certs because they are for HOST0
        
      # clean up certs that should not be copied off this host
      find /tmp/${HOST2} -name ca.key -type f -delete
      find /tmp/${HOST1} -name ca.key -type f -delete
      
    when: "{{ inventory_hostname == 'vps-4263b60e' }}"

  - name: Fetch etcd2 files from etcd1 to local 
    run_once: yes
    fetch: src=/tmp/192.168.0.3/* dest=buffer/192.168.0.3 flat=yes 
    when: "{{ inventory_hostname == 'vps-4263b60e' }}"

  - name: Copy files from local to etcd2 
    copy: src=buffer/192.168.0.3/* dest=/home/ubuntu/
    when: "{{ inventory_hostname == 'vps-b152d57f' }}"

  - name: Fetch etcd3 files from etcd1 to local 
    run_once: yes
    fetch: src=/tmp/192.168.0.4/* dest=buffer/192.168.0.4 flat=yes 
    when: "{{ inventory_hostname == 'vps-4263b60e' }}"

  - name: Copy files from local to etcd2 
    copy: src=buffer/192.168.0.4/* dest=/home/ubuntu/
    when: "{{ inventory_hostname == 'vps-a1922212' }}"

  - name: Move etdc1 files from /tmp to /home/ubuntu 
    move: 
      src: /tmp/192.168.0.2/*
      dest: /home/ubuntu/
    when: "{{ inventory_hostname == 'vps-4263b60e' }}"

  - name: Configure etcd nodes 
    shell: |    
      sudo -Es
      chown -R root:root pki
      mv pki /etc/kubernetes/
      kubeadm init phase etcd local --config=kubeadmcfg.yaml




      






        
